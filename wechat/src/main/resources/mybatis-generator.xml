<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!--加载配置文件，为下面读取数据库信息准备-->
    <properties resource="data.properties"/>

    <context id="default" targetRuntime="MyBatis3Simple" defaultModelType="flat">

        <!-- 生成的Java文件的编码 -->
        <property name="javaFileEncoding" value="UTF-8"/>

        <!-- 格式化java代码 -->
        <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>
        <!-- 格式化XML代码 -->
        <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>

        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>

        <plugin type="tk.mybatis.mapper.generator.MapperPlugin">
            <property name="mappers" value="tk.mybatis.mapper.common.Mapper"/>
            <!--caseSensitive默认false，当数据库表名区分大小写时，可以将该属性设置为true-->
            <property name="caseSensitive" value="true"/>
        </plugin>

        <!-- 使用lombok-->
        <!--<plugin type="com.chrm.mybatis.generator.plugins.LombokPlugin" >-->
            <!--<property name="hasLombok" value="true"/>-->
        <!--</plugin>-->

        <!-- 生成 JavaBean 对象重写 toString方法 -->
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin"/>

        <!-- 生成 JavaBean 对象继承 Serializable 类 -->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>

        <!-- 阻止生成自动注释 -->
        <commentGenerator>
            <property name="javaFileEncoding" value="UTF-8"/>
            <property name="suppressDate" value="true"/>
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>

        <!--数据库链接地址账号密码-->
        <jdbcConnection driverClass="${spring.datasource.driver-class-name}"
                        connectionURL="${spring.datasource.url}"
                        userId="${spring.datasource.username}"
                        password="${spring.datasource.password}">
        </jdbcConnection>

        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!--生成Model类存放位置-->
        <javaModelGenerator targetPackage="com.example.wechat.entity.customer" targetProject="src/main/java">
            <!--<property name="constructorBased" value="false"/>-->
            <property name="useActualColumnNames" value="true"/>
            <property name="enableSubPackages" value="true"/>

            <property name="enableSubPackages" value="true"/>
            <property name="trimStrings" value="true"/>
            <!-- 给Model添加一个父类 -->
            <property name="rootClass" value="com.common.entity.BaseEntity"/>
        </javaModelGenerator>

        <!--生成映射文件存放位置-->
        <sqlMapGenerator targetPackage="mapper/customer" targetProject="src/main/resources">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <!--生成mapper类存放位置-->
        <javaClientGenerator type="XMLMAPPER" targetPackage="com.example.wechat.dao.customer"
                             targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <!--生成对应表及类名 -->
        <!--<table tableName="t_wechat_log" domainObjectName="WechatLog"></table>-->
        <!--<table tableName="t_wechat_customer" domainObjectName="Customer"></table>-->
        <!--<table tableName="t_wechat_permission" domainObjectName="Permission"></table>-->
        <!--<table tableName="t_customer_permission" domainObjectName="CustomerPermission"></table>-->
        <!--<table tableName="t_wechat_customer_extra" domainObjectName="CustomerExtra"></table>-->
        <!--<table tableName="t_wechat_banner" domainObjectName="BannerInfo"></table>-->
    </context>
</generatorConfiguration>